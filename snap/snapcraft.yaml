name: ioncore
version: 3.1.99
summary:   gaming related peer-to-peer network based digital currency
description: |
  Ion Core is an MIT licensed,
  open source, gaming oriented, blockchain-based cryptocurrency with
  ultra fast transactions, low fees, high network decentralization, and
  Zero Knowledge cryptography proofs for industry-leading
  transaction anonymity. This package include QT, daemon, cli and tx
  binaries.
  
  Wiki (Ion Core):    https://github.com/ioncoincore/ion/wiki
  Wiki (Ionomy):      https://github.com/ionomy/ion/wiki
  Wiki (Ion Core CE): https://github.com/cevap/ion/wiki
  
  Technical documentaion: https://techdoc.ioncoin.org
  
  Whitepaper: https://ionomy.com/en/whitepaper
  
  Technical whitepaper: 
    https://github.com/ionomy/ion/wiki/ION-Technical-Whitepaper
  
  Get source code from Github: https://github.com/ioncoincore/ion.git
  Get CE source code from Github: https://github.com/cevap/ion.git
  
  Chat with Support on Discord: https://discord.gg/vuZn7gC
  
  Contact us on social networks and forums
    Instagram: https://t.me/ionomy
    Twitter:   https://twitter.com/ionomics
    Reddit:    https://www.reddit.com/r/ionomy/
    Facebook:  https://facebook.com/ionomy

grade: devel
confinement: strict
icon: src/qt/res/src/ion.svg
apps:
  daemon:
    command: iond
    plugs: [network, network-bind]
    environment:
      XDG_DATA_DIRS: $SNAP_USER_DATA:$SNAP/usr/share:$XDG_DATA_DIRS
  qt:
    command: desktop-launch ion-qt
    plugs: [network, network-bind, unity7, desktop, desktop-legacy, wayland, x11]
    desktop: ion.desktop
  cli:
    command: ion-cli
    plugs: [network, network-bind]
    environment:
      XDG_DATA_DIRS: $SNAP_USER_DATA:$SNAP/usr/share:$XDG_DATA_DIRS
  tx:
    command: ion-tx

parts:
  ion:
    source: https://github.com/ioncoincore/ion
    source-type: git
    source-tag: master
    plugin: autotools
    # We don't want to copy the full blockchain every time that the snap is   
    # updated, but there's no way to define a default data dir in ion-qt.
    # Also, it would be better if we could split the wallet from the blockchain
    prepare: |
      export DEPENDSARCH=$(./depends/config.guess)
      if [ $DEPENDSARCH != "x86_64-pc-linux-gnu" ] 
      then
        apt install g++-$DEPENDSARCH binutils-$DEPENDSARCH
      fi
      git apply $SNAPCRAFT_STAGE/default_data_dir.patch
      sed -i 's/tar --strip-components/tar --no-same-owner --strip-components/' ./depends/funcs.mk
      mv ./depends $SNAPCRAFT_STAGE/depends
      cd $SNAPCRAFT_STAGE/depends
      make
    build: |
      # build dependencies
      export DEPENDSARCH=$($SNAPCRAFT_STAGE/depends/config.guess)
      ./autogen.sh
      ./configure --prefix=$SNAPCRAFT_STAGE/depends/$DEPENDSARCH
      make
    install: |
      make install
    build-packages:
      - curl
      - wget
      - g++
      - gcc
      - make
      - autoconf
      - automake
      - cmake
      - pkg-config
      - libtool
      - bsdmainutils
      - g++-multilib 
      - binutils-gold
      - python3
    stage-packages: [ca-certificates]
    after:
      - patches
  patches:
    source: snap/local/patches
    plugin: dump
    prime:
      - -*
  desktop:
    source: snap/gui
    plugin: dump
