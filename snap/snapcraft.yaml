# Copyright (c) 2018-2019 The Ion developers
name: ioncore
base: core18
version: 3.2.99
summary:   gaming related peer-to-peer network based digital currency
description: |
  Ion Core is an MIT licensed,
  open source, gaming oriented, blockchain-based cryptocurrency with
  ultra fast transactions, low fees, high network decentralization, and
  Zero Knowledge cryptography proofs for industry-leading
  transaction anonymity. 
  
  Wiki (Ion Core):    https://github.com/ioncoincore/ion/wiki
  Wiki (Ionomy):      https://github.com/ionomy/ion/wiki
  Wiki (Ion Core CE): https://github.com/cevap/ion/wiki
  
  Technical documentaion: https://techdoc.ioncore.xyz
  
  Whitepaper: https://ionomy.com/en/whitepaper
  
  Technical whitepaper: 
    https://github.com/ionomy/ion/wiki/ION-Technical-Whitepaper
  
  Get source code from Github: https://github.com/ioncoincore/ion.git
  Get CE source code from Github: https://github.com/cevap/ion.git
  
  Chat with Support on Discord: https://discord.gg/vuZn7gC
  
  Contact us on social networks and forums
    Instagram: https://t.me/ionomy
    Twitter:   https://twitter.com/ionomics
    Reddit:    https://www.reddit.com/r/ionomy/
    Facebook:  https://facebook.com/ionomy
  
  - Feature request: https://tinyurl.com/y5ds7s3t
  - I need help/support (observed by ionomy.com staff): https://tinyurl.com/yy6xa3p4
  - Report a bug: https://tinyurl.com/y5wzybwe
  - Report some random issue: https://tinyurl.com/y5cgm2vp
  - Testing Report: https://tinyurl.com/y39n2hsv
grade: devel
confinement: strict
icon: src/qt/res/src/ion.svg
apps:
  daemon:
    command: iond
    plugs: [network, network-bind, network-status, home, removable-media]
    desktop: iond-snap.desktop
    environment:
      XDG_DATA_DIRS: $SNAP_USER_DATA:$SNAP/usr/share:$XDG_DATA_DIRS
  daemon-testnet:
    command: iond --testnet
    plugs: [network, network-bind, network-status, home, removable-media]
    desktop: iond-testnet-snap.desktop
    environment:
      XDG_DATA_DIRS: $SNAP_USER_DATA:$SNAP/usr/share:$XDG_DATA_DIRS
  daemon-regtest:
    command: iond --regtest
    desktop: iond-regtest-snap.desktop
    plugs: [network, network-bind, network-status, home, removable-media]
    environment:
      XDG_DATA_DIRS: $SNAP_USER_DATA:$SNAP/usr/share:$XDG_DATA_DIRS
  qt:
    command: ion-qt
    plugs: [network, network-bind, network-status, unity7, desktop, desktop-legacy, wayland, x11, mir, opengl, home, gsettings, removable-media, screen-inhibit-control, pulseaudio, media-hub]
    desktop: ion-qt-snap.desktop
    environment:
      QT_XKB_CONFIG_ROOT: $SNAP_USER_DATA:$SNAP/usr/share:$QT_XKB_CONFIG_ROOT
      XDG_DATA_DIRS: $SNAP_USER_DATA:$SNAP/usr/share:$XDG_DATA_DIRS
  qt-testnet:
    command: ion-qt --testnet
    plugs: [network, network-bind, network-status, unity7, desktop, desktop-legacy, wayland, x11, mir, opengl, home, gsettings, removable-media, screen-inhibit-control, pulseaudio, media-hub]
    desktop: ion-qt-testnet-snap.desktop
    environment:
      QT_XKB_CONFIG_ROOT: $SNAP_USER_DATA:$SNAP/usr/share:$QT_XKB_CONFIG_ROOT
      XDG_DATA_DIRS: $SNAP_USER_DATA:$SNAP/usr/share:$XDG_DATA_DIRS
  qt-regtest:
    command: ion-qt --regtest
    plugs: [network, network-bind, network-status, unity7, desktop, desktop-legacy, wayland, x11, mir, opengl, home, gsettings, removable-media, screen-inhibit-control, pulseaudio, media-hub]
    desktop: ion-qt-regtest-snap.desktop
    environment:
      QT_XKB_CONFIG_ROOT: $SNAP_USER_DATA:$SNAP/usr/share:$QT_XKB_CONFIG_ROOT
      XDG_DATA_DIRS: $SNAP_USER_DATA:$SNAP/usr/share:$XDG_DATA_DIRS
  cli:
    command: ion-cli
    plugs: [network, network-bind, network-status, home]
    environment:
      XDG_DATA_DIRS: $SNAP_USER_DATA:$SNAP/usr/share:$XDG_DATA_DIRS
  cli-testnet:
    command: ion-cli --testnet
    plugs: [network, network-bind, home]
    environment:
      XDG_DATA_DIRS: $SNAP_USER_DATA:$SNAP/usr/share:$XDG_DATA_DIRS
  cli-regtest:
    command: ion-cli --regtest
    plugs: [network, network-bind, home]
    environment:
      XDG_DATA_DIRS: $SNAP_USER_DATA:$SNAP/usr/share:$XDG_DATA_DIRS
  tx:
    command: ion-tx
    plugs: [home]
  test:
    command: test_ion
    plugs: [home]
  testqt:
    command: test_ion-qt
    plugs: [home]
parts:
  ion:
    source: https://github.com/ioncoincore/ion
    source-type: git
    source-tag: master
    plugin: nil
    # We don't want to copy the full blockchain every time that the snap is   
    # updated, but there's no way to define a default data dir in ion-qt.
    # Also, it would be better if we could split the wallet from the blockchain
    override-build: |
      SHORTNAME="ion"
      JOBS=4
      if [ $SNAPCRAFT_ARCH_TRIPLET = "i386-linux-gnu" ]; then
        HOST="i686-linux-gnu"
      else
        HOST="${SNAPCRAFT_ARCH_TRIPLET}"
      fi
      # APPLY PATCHES
      cd ${SNAPCRAFT_PART_BUILD}
      echo "apply patches:"
      git apply $SNAPCRAFT_PART_BUILD/share/snap/patches/default_data_dir
      git apply $SNAPCRAFT_PART_BUILD/share/snap/patches/fix-bdb-tmp-folder
      git apply $SNAPCRAFT_PART_BUILD/share/snap/patches/fix-use-snap-instead-of-dirty
      sed -i 's/tar --strip-components/tar --no-same-owner --strip-components/' ${SNAPCRAFT_PART_BUILD}/depends/funcs.mk
      # BUILD DEPENDENCIES
      echo "START BUILDING ${SHORTNAME} FOR ${SNAPCRAFT_ARCH_TRIPLET} architecture"
      cd ${SNAPCRAFT_PART_BUILD}/depends
      make download-linux
      make -j${JOBS} HOST=${HOST}
      # CONFIGURE
      echo "Configure ${SHORTNAME}"
      cd ${SNAPCRAFT_PART_BUILD}
      echo "Configure and build ${SHORTNAME}"
      ./autogen.sh
      ./configure --prefix=`pwd`/depends/${HOST}
      # COMPILE
      echo "Compile ${SHORTNAME}"
      make -j${JOBS}
      # INSTALL
      echo "Install ${SHORTNAME}"
      make install prefix=${SNAPCRAFT_PART_INSTALL}
      # POST INSTALL
      if [ $SNAPCRAFT_ARCH_TRIPLET = "powerpc64le-linux-gnu" ]; then
        if [ -e $SNAPCRAFT_PART_BUILD/src/qt/${SHORTNAME}-qt ]; then
          echo "PPC64EL fix - ${SHORTNAME}-qt exists, fix unrequired"
        else
          echo "echo ${SHORTNAME}-qt is not installed" > ${SNAPCRAFT_PART_INSTALL}/usr/bin/${SHORTNAME}-qt
          chmod +x ${SNAPCRAFT_PART_INSTALL}/usr/bin/${SHORTNAME}-qt
          echo "PPC64EL fix - ${SHORTNAME}-qt does not exist, fix required, dummy as ${SHORTNAME}-qt"
        fi
      fi
      ## COPY ICONS AND SHORTCUTS
      #   we can place icons into projects ./snap/usr/share/applications folder
      #   instead we will copy them in this step and remove snap/usr folder, we
      #   wll use instead icons from ./share/pixmap foler
      #mkdir -p ${SNAPCRAFT_PART_INSTALL}/usr/share/applications
      cp ${SNAPCRAFT_PART_BUILD}/share/pixmaps/${SHORTNAME}.ico ${SNAPCRAFT_PRIME}/${SHORTNAME}qtsnap.ico
      cp ${SNAPCRAFT_PART_BUILD}/share/pixmaps/${SHORTNAME}testnet.ico ${SNAPCRAFT_PRIME}/${SHORTNAME}qttestnetsnap.ico
      cp ${SNAPCRAFT_PART_BUILD}/share/pixmaps/${SHORTNAME}regtest.ico ${SNAPCRAFT_PRIME}/${SHORTNAME}qtregtestsnap.ico
      cp ${SNAPCRAFT_PART_BUILD}/share/pixmaps/${SHORTNAME}d.ico ${SNAPCRAFT_PRIME}/${SHORTNAME}dsnap.ico
      cp ${SNAPCRAFT_PART_BUILD}/share/pixmaps/${SHORTNAME}d.ico ${SNAPCRAFT_PRIME}/${SHORTNAME}d-testnet-snap.ico
      cp ${SNAPCRAFT_PART_BUILD}/share/pixmaps/${SHORTNAME}d.ico ${SNAPCRAFT_PRIME}/${SHORTNAME}d-regtest-snap.ico
      # very simply test of binaries, run a command to get version and use it to set vars
      SNAPCRAFT_PROJECT_VERSION=$(src/ion-cli --version | grep "version" | awk '{print $6;}')
      for SCUT in $(ls -1a ${SNAPCRAFT_PART_BUILD}/debian/*.desktop); do
        SCUTNOEXT=$(echo ${SCUT} | sed "s/.desktop//")
        cp ${SNAPCRAFT_PART_BUILD}/debian/${SCUTNOEXT}.desktop ${SNAPCRAFT_PRIME}/${SCUTNOEXT}-snap.desktop
        if [ $SCUTNOEXT = "${SHORTNAME}d" ]; then
          cp ${SNAPCRAFT_PART_BUILD}/debian/${SCUTNOEXT}.desktop ${SNAPCRAFT_PRIME}/${SCUTNOEXT}-testnet-snap.desktop
          cp ${SNAPCRAFT_PART_BUILD}/debian/${SCUTNOEXT}.desktop ${SNAPCRAFT_PRIME}/${SCUTNOEXT}-regtest-snap.desktop
        fi
        sed -i "s/Name\=ION Core Daemon/Name\=Ion Core Daemon/" ${SNAPCRAFT_PRIME}/${SCUTNOEXT}-snap.desktop
        sed -i "s/Exec=${SHORTNAME}-qt/${SHORTNAME}core.qt/" ${SNAPCRAFT_PRIME}/${SCUTNOEXT}-snap.desktop
        sed -i "s/Exec=${SHORTNAME}d/${SHORTNAME}core.daemon/" ${SNAPCRAFT_PRIME}/${SCUTNOEXT}-snap.desktop
        sed -i "s/Exec=${SHORTNAME}-cli/${SHORTNAME}core.cli/" ${SNAPCRAFT_PRIME}/${SCUTNOEXT}-snap.desktop
        sed -i "s/Exec=${SHORTNAME}-tx/${SHORTNAME}core.tx/" ${SNAPCRAFT_PRIME}/${SCUTNOEXT}-snap.desktop
        sed -i "s/Exec=test_${SHORTNAME}/${SHORTNAME}core.test/" ${SNAPCRAFT_PRIME}/${SCUTNOEXT}-snap.desktop
        sed -i "s/Exec=test_${SHORTNAME}-qt/${SHORTNAME}core.test-qt/" ${SNAPCRAFT_PRIME}/${SCUTNOEXT}-snap.desktop
        sed -i "s/ --regtest/-regtest/" ${SNAPCRAFT_PRIME}/${SCUTNOEXT}-snap.desktop
        sed -i "s/ --testnet/-testnet/" ${SNAPCRAFT_PRIME}/${SCUTNOEXT}-snap.desktop
        sed -i "s/Icon\=${SHORTNAME}128/Icon\=$\{SNAP\}\/${SHORTNAME}qtsnap.ico/" ${SNAPCRAFT_PRIME}/${SCUTNOEXT}-snap.desktop
        sed -i "s/Icon\=${SHORTNAME}testnet128/Icon\=$\{SNAP\}\/${SHORTNAME}qttestnetsnap.ico/" ${SNAPCRAFT_PRIME}/${SCUTNOEXT}-snap.desktop
        sed -i "s/Icon\=${SHORTNAME}regtest128/Icon\=$\{SNAP\}\/${SHORTNAME}qtregtestsnap.ico/" ${SNAPCRAFT_PRIME}/${SCUTNOEXT}-snap.desktop
        sed -i "s/Icon\=${SHORTNAME}d128/Icon\=$\{SNAP\}\/${SHORTNAME}dsnap.ico/" ${SNAPCRAFT_PRIME}/${SCUTNOEXT}-snap.desktop
        sed -i "s/Icon\=${SHORTNAME}dtestnet128/Icon\=$\{SNAP\}\/${SHORTNAME}}d-testnet-snap.ico/" ${SNAPCRAFT_PRIME}/${SCUTNOEXT}-snap.desktop
        sed -i "s/Icon\=${SHORTNAME}dregtest128/Icon\=$\{SNAP\}\/${SHORTNAME}d-regtest-snap.ico/" ${SNAPCRAFT_PRIME}/${SCUTNOEXT}-snap.desktop
        sed -i "s/deb;launchpad;/snap;launchpad;/" ${SNAPCRAFT_PRIME}/${SCUTNOEXT}-snap.desktop
        cat "Version=${SNAPCRAFT_PROJECT_VERSION}" >> ${SNAPCRAFT_PRIME}/${SCUT}
      done
      # create .ioncoin folder and copy example config
      mkdir -p ${SNAP_USER_COMMON}/.ioncoin
      cd ${SNAPCRAFT_PART_BUILD}/debian/manpages/ioncoin.conf.5 ${SNAP_USER_COMMON}/.ioncoin/ioncoin-example.conf
      # List installed files
      echo "Installed files:"
      ls $SNAPCRAFT_PART_INSTALL
    build-packages:
      - curl
      - wget
      - gcc
      - gcc-8
      - g++
      - g++-8
      - make
      - autoconf
      - automake
      - cmake
      - pkg-config
      - libtool
      - bsdmainutils
      - binutils
      - python3
      - help2man
    stage-packages:
      - libxkbcommon0
      - ttf-ubuntu-font-family
      - dmz-cursor-theme
      - light-themes
      - shared-mime-info
      - libqt5gui5
      - libgdk-pixbuf2.0-0
      - libqt5svg5 # for loading icon themes which are svg
      - locales-all
      - qtwayland5
      - ca-certificates
