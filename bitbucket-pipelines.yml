# This is a sample build configuration for C++ â€“ Make.
# Check our guides at https://confluence.atlassian.com/x/5Q4SMw for more examples.
# Only use spaces to indent your .yml configuration.
# -----
# You can specify a custom docker image from Docker Hub as your build environment.
image: ioncoin/gitian
 
pipelines:
  default:
    - parallel:
      - step:
          name: lint
          script: # Modify the commands below to build your repository.
            - MAKEJOBS=-j3
            - RUN_UNIT_TESTS=false
            - RUN_FUNCTIONAL_TESTS=false # Not Yet Implemented
            - RUN_BENCH=false  # Set to true for any one job that has debug enabled, to quickly check bench is not crashing or hitting assertions
            - DOCKER_NAME_TAG=ubuntu:18.04
            - BOOST_TEST_RANDOM=1$TRAVIS_BUILD_ID
            - CCACHE_SIZE=100M
            - CCACHE_TEMPDIR=/tmp/.ccache-temp
            - CCACHE_COMPRESS=1
            - CCACHE_DIR=$HOME/.ccache
            - BASE_OUTDIR=$TRAVIS_BUILD_DIR/out
            - SDK_URL=https://github.com/gitianuser/MacOSX-SDKs/releases/download/MacOSX10.11.sdk
            - WINEDEBUG=fixme-all
            - DOCKER_PACKAGES="build-essential libtool autotools-dev automake pkg-config bsdmainutils curl git ca-certificates ccache"
            - CACHE_ERR_MSG="Error! Initial build successful, but not enough time remains to run later build stages and tests. Please manually re-run this job by using the travis restart button or asking a bitcoin maintainer to restart. The next run should not time out because the build cache has been saved."
            #- set -o errexit; source .travis/test_04_install.sh
            #- set -o errexit; source .travis/test_05_before_script.sh
            - export CONTINUE=1 # SCRIPT
            #- if [ $SECONDS -gt 1200 ]; then export CONTINUE=0; fi  # Likely the depends build took very long
            #- if [ $CONTINUE = "1" ]; then set -o errexit; source .travis/test_06_script_a.sh; else set +o errexit; echo "$CACHE_ERR_MSG"; false; fi
            #- if [ $SECONDS -gt 1500 ]; then export CONTINUE=0; fi  # Likely the build took very long; The tests take about 1000s, so we should abort if we have less than 50*60-1000=2000s left
            #- if [ $CONTINUE = "1" ]; then set -o errexit; source .travis/test_06_script_b.sh; else set +o errexit; echo "$CACHE_ERR_MSG"; false; fi
            - echo $TRAVIS_COMMIT_RANGE # AFTERSCRIPT
            - echo $TRAVIS_COMMIT_LOG
            #- set -o errexit; source .travis/lint_04_install.sh
            - set -o errexit; source .travis/lint_05_before_script.sh
            #- set -o errexit; source .travis/lint_06_script.sh
      - step:
          name: 'ARM 32-bit  [GOAL: install]  [no unit or functional tests]'
          script: # Modify the commands below to build your repository.
            - MAKEJOBS=-j3
            - RUN_UNIT_TESTS=false
            - RUN_FUNCTIONAL_TESTS=false # Not Yet Implemented
            - RUN_BENCH=false  # Set to true for any one job that has debug enabled, to quickly check bench is not crashing or hitting assertions
            - DOCKER_NAME_TAG=ubuntu:18.04
            - BOOST_TEST_RANDOM=1$TRAVIS_BUILD_ID
            - CCACHE_SIZE=100M
            - CCACHE_TEMPDIR=/tmp/.ccache-temp
            - CCACHE_COMPRESS=1
            - CCACHE_DIR=$HOME/.ccache
            - BASE_OUTDIR=$TRAVIS_BUILD_DIR/out
            - SDK_URL=https://github.com/gitianuser/MacOSX-SDKs/releases/download/MacOSX10.11.sdk
            - WINEDEBUG=fixme-all
            - DOCKER_PACKAGES="build-essential libtool autotools-dev automake pkg-config bsdmainutils curl git ca-certificates ccache"
            - CACHE_ERR_MSG="Error! Initial build successful, but not enough time remains to run later build stages and tests. Please manually re-run this job by using the travis restart button or asking a bitcoin maintainer to restart. The next run should not time out because the build cache has been saved."
            - set -o errexit; source .travis/test_03_before_install.sh
            - set -o errexit; source .travis/test_04_install.sh
            - set -o errexit; source .travis/test_05_before_script.sh
            - export CONTINUE=1
            - if [ $SECONDS -gt 1200 ]; then export CONTINUE=0; fi  # Likely the depends build took very long
            - if [ $CONTINUE = "1" ]; then set -o errexit; source .travis/test_06_script_a.sh; else set +o errexit; echo "$CACHE_ERR_MSG"; false; fi
            - if [ $SECONDS -gt 1500 ]; then export CONTINUE=0; fi  # Likely the build took very long; The tests take about 1000s, so we should abort if we have less than 50*60-1000=2000s left
            - if [ $CONTINUE = "1" ]; then set -o errexit; source .travis/test_06_script_b.sh; else set +o errexit; echo "$CACHE_ERR_MSG"; false; fi
            - echo $TRAVIS_COMMIT_RANGE
            - echo $TRAVIS_COMMIT_LOG
            - HOST=arm-linux-gnueabihf
            - PACKAGES="python3 g++-arm-linux-gnueabihf"
            - RUN_FUNCTIONAL_TESTS=false
            - GOAL="install"
            - # -Wno-psabi is to disable ABI warnings: "note: parameter passing for argument of type ... changed in GCC 7.1"
            - # This could be removed once the ABI change warning does not show up by default
            - ION_CONFIG="--enable-glibc-back-compat --enable-reduce-exports CXXFLAGS=-Wno-psabi"
      - step:
          name: 'ARM 64-bit  [GOAL:install] [no unit or functional tests]'
          script: # Modify the commands below to build your repository.
            - MAKEJOBS=-j3
            - MAKEJOBS=-j3
            - RUN_UNIT_TESTS=false
            - RUN_FUNCTIONAL_TESTS=false # Not Yet Implemented
            - RUN_BENCH=false  # Set to true for any one job that has debug enabled, to quickly check bench is not crashing or hitting assertions
            - DOCKER_NAME_TAG=ubuntu:18.04
            - BOOST_TEST_RANDOM=1$TRAVIS_BUILD_ID
            - CCACHE_SIZE=100M
            - CCACHE_TEMPDIR=/tmp/.ccache-temp
            - CCACHE_COMPRESS=1
            - CCACHE_DIR=$HOME/.ccache
            - BASE_OUTDIR=$TRAVIS_BUILD_DIR/out
            - SDK_URL=https://github.com/gitianuser/MacOSX-SDKs/releases/download/MacOSX10.11.sdk
            - WINEDEBUG=fixme-all
            - DOCKER_PACKAGES="build-essential libtool autotools-dev automake pkg-config bsdmainutils curl git ca-certificates ccache"
            - CACHE_ERR_MSG="Error! Initial build successful, but not enough time remains to run later build stages and tests. Please manually re-run this job by using the travis restart button or asking a bitcoin maintainer to restart. The next run should not time out because the build cache has been saved."
            - set -o errexit; source .travis/test_03_before_install.sh
            #- set -o errexit; source .travis/test_04_install.sh
            #- set -o errexit; source .travis/test_05_before_script.sh
            - export CONTINUE=1
            #- if [ $SECONDS -gt 1200 ]; then export CONTINUE=0; fi  # Likely the depends build took very long
            #- if [ $CONTINUE = "1" ]; then set -o errexit; source .travis/test_06_script_a.sh; else set +o errexit; echo "$CACHE_ERR_MSG"; false; fi
            #- if [ $SECONDS -gt 1500 ]; then export CONTINUE=0; fi  # Likely the build took very long; The tests take about 1000s, so we should abort if we have less than 50*60-1000=2000s left
            #- if [ $CONTINUE = "1" ]; then set -o errexit; source .travis/test_06_script_b.sh; else set +o errexit; echo "$CACHE_ERR_MSG"; false; fi
            - echo $TRAVIS_COMMIT_RANGE
            - echo $TRAVIS_COMMIT_LOG
            - HOST=aarch64-linux-gnu
            - PACKAGES="python3 g++-aarch64-linux-gnu"
            - RUN_FUNCTIONAL_TESTS=false
            - GOAL="install"
            - ION_CONFIG="--enable-glibc-back-compat --enable-reduce-exports"
      - step:
           name: 'RISC-V  [GOAL:install] [no unit or functional tests]'
           script: # Modify the commands below to build your repository.
             - MAKEJOBS=-j3
             - MAKEJOBS=-j3
             - RUN_UNIT_TESTS=false
             - RUN_FUNCTIONAL_TESTS=false # Not Yet Implemented
             - RUN_BENCH=false  # Set to true for any one job that has debug enabled, to quickly check bench is not crashing or hitting assertions
             - DOCKER_NAME_TAG=ubuntu:18.04
             - BOOST_TEST_RANDOM=1$TRAVIS_BUILD_ID
             - CCACHE_SIZE=100M
             - CCACHE_TEMPDIR=/tmp/.ccache-temp
             - CCACHE_COMPRESS=1
             - CCACHE_DIR=$HOME/.ccache
             - BASE_OUTDIR=$TRAVIS_BUILD_DIR/out
             - SDK_URL=https://github.com/gitianuser/MacOSX-SDKs/releases/download/MacOSX10.11.sdk
             - WINEDEBUG=fixme-all
             - DOCKER_PACKAGES="build-essential libtool autotools-dev automake pkg-config bsdmainutils curl git ca-certificates ccache"
             - CACHE_ERR_MSG="Error! Initial build successful, but not enough time remains to run later build stages and tests. Please manually re-run this job by using the travis restart button or asking a bitcoin maintainer to restart. The next run should not time out because the build cache has been saved."
             - set -o errexit; source .travis/test_03_before_install.sh
             #- set -o errexit; source .travis/test_04_install.sh
             #- set -o errexit; source .travis/test_05_before_script.sh
             - export CONTINUE=1
             #- if [ $SECONDS -gt 1200 ]; then export CONTINUE=0; fi  # Likely the depends build took very long
             #- if [ $CONTINUE = "1" ]; then set -o errexit; source .travis/test_06_script_a.sh; else set +o errexit; echo "$CACHE_ERR_MSG"; false; fi
             #- if [ $SECONDS -gt 1500 ]; then export CONTINUE=0; fi  # Likely the build took very long; The tests take about 1000s, so we should abort if we have less than 50*60-1000=2000s left
             #- if [ $CONTINUE = "1" ]; then set -o errexit; source .travis/test_06_script_b.sh; else set +o errexit; echo "$CACHE_ERR_MSG"; false; fi
             - echo $TRAVIS_COMMIT_RANGE
             - echo $TRAVIS_COMMIT_LOG
             - HOST=riscv64-linux-gnu
             - PACKAGES="python3 g++-riscv64-linux-gnu"
             - RUN_FUNCTIONAL_TESTS=false
             - GOAL="install"
             - ION_CONFIG="--enable-glibc-back-compat --enable-reduce-exports"
      - step:
           name: 'Win32  [GOAL: deploy] [no functional tests]'
           script: # Modify the commands below to build your repository.
             - MAKEJOBS=-j3
             - MAKEJOBS=-j3
             - RUN_UNIT_TESTS=false
             - RUN_FUNCTIONAL_TESTS=false # Not Yet Implemented
             - RUN_BENCH=false  # Set to true for any one job that has debug enabled, to quickly check bench is not crashing or hitting assertions
             - DOCKER_NAME_TAG=ubuntu:18.04
             - BOOST_TEST_RANDOM=1$TRAVIS_BUILD_ID
             - CCACHE_SIZE=100M
             - CCACHE_TEMPDIR=/tmp/.ccache-temp
             - CCACHE_COMPRESS=1
             - CCACHE_DIR=$HOME/.ccache
             - BASE_OUTDIR=$TRAVIS_BUILD_DIR/out
             - SDK_URL=https://github.com/gitianuser/MacOSX-SDKs/releases/download/MacOSX10.11.sdk
             - WINEDEBUG=fixme-all
             - DOCKER_PACKAGES="build-essential libtool autotools-dev automake pkg-config bsdmainutils curl git ca-certificates ccache"
             - CACHE_ERR_MSG="Error! Initial build successful, but not enough time remains to run later build stages and tests. Please manually re-run this job by using the travis restart button or asking a bitcoin maintainer to restart. The next run should not time out because the build cache has been saved."
             - set -o errexit; source .travis/test_03_before_install.sh
             #- set -o errexit; source .travis/test_04_install.sh
             #- set -o errexit; source .travis/test_05_before_script.sh
             - export CONTINUE=1
             #- if [ $SECONDS -gt 1200 ]; then export CONTINUE=0; fi  # Likely the depends build took very long
             #- if [ $CONTINUE = "1" ]; then set -o errexit; source .travis/test_06_script_a.sh; else set +o errexit; echo "$CACHE_ERR_MSG"; false; fi
             #- if [ $SECONDS -gt 1500 ]; then export CONTINUE=0; fi  # Likely the build took very long; The tests take about 1000s, so we should abort if we have less than 50*60-1000=2000s left
             #- if [ $CONTINUE = "1" ]; then set -o errexit; source .travis/test_06_script_b.sh; else set +o errexit; echo "$CACHE_ERR_MSG"; false; fi
             - echo $TRAVIS_COMMIT_RANGE
             - echo $TRAVIS_COMMIT_LOG
             - HOST=i686-w64-mingw32
             - DPKG_ADD_ARCH="i386"
             - PACKAGES="python3 nsis g++-mingw-w64-i686 wine-binfmt wine32"
             - RUN_FUNCTIONAL_TESTS=false
             - GOAL="deploy"
             - ION_CONFIG="--enable-reduce-exports"
      - step:
           name: 'Win64  [GOAL: deploy] [no functional tests]'
           script: # Modify the commands below to build your repository.
             - MAKEJOBS=-j3
             - MAKEJOBS=-j3
             - RUN_UNIT_TESTS=false
             - RUN_FUNCTIONAL_TESTS=false # Not Yet Implemented
             - RUN_BENCH=false  # Set to true for any one job that has debug enabled, to quickly check bench is not crashing or hitting assertions
             - DOCKER_NAME_TAG=ubuntu:18.04
             - BOOST_TEST_RANDOM=1$TRAVIS_BUILD_ID
             - CCACHE_SIZE=100M
             - CCACHE_TEMPDIR=/tmp/.ccache-temp
             - CCACHE_COMPRESS=1
             - CCACHE_DIR=$HOME/.ccache
             - BASE_OUTDIR=$TRAVIS_BUILD_DIR/out
             - SDK_URL=https://github.com/gitianuser/MacOSX-SDKs/releases/download/MacOSX10.11.sdk
             - WINEDEBUG=fixme-all
             - DOCKER_PACKAGES="build-essential libtool autotools-dev automake pkg-config bsdmainutils curl git ca-certificates ccache"
             - CACHE_ERR_MSG="Error! Initial build successful, but not enough time remains to run later build stages and tests. Please manually re-run this job by using the travis restart button or asking a bitcoin maintainer to restart. The next run should not time out because the build cache has been saved."
             - set -o errexit; source .travis/test_03_before_install.sh
             #- set -o errexit; source .travis/test_04_install.sh
             #- set -o errexit; source .travis/test_05_before_script.sh
             - export CONTINUE=1
             #- if [ $SECONDS -gt 1200 ]; then export CONTINUE=0; fi  # Likely the depends build took very long
             #- if [ $CONTINUE = "1" ]; then set -o errexit; source .travis/test_06_script_a.sh; else set +o errexit; echo "$CACHE_ERR_MSG"; false; fi
             #- if [ $SECONDS -gt 1500 ]; then export CONTINUE=0; fi  # Likely the build took very long; The tests take about 1000s, so we should abort if we have less than 50*60-1000=2000s left
             #- if [ $CONTINUE = "1" ]; then set -o errexit; source .travis/test_06_script_b.sh; else set +o errexit; echo "$CACHE_ERR_MSG"; false; fi
             - echo $TRAVIS_COMMIT_RANGE
             - echo $TRAVIS_COMMIT_LOG
             - HOST=x86_64-w64-mingw32
             - PACKAGES="python3 nsis g++-mingw-w64-x86-64 wine-binfmt wine64"
             - RUN_FUNCTIONAL_TESTS=false
             - GOAL="deploy"
             - ION_CONFIG="--enable-reduce-exports"
      - step:
           name: '32-bit + ion  [GOAL: install] [no gui]'
           script: # Modify the commands below to build your repository.
             - MAKEJOBS=-j3
             - MAKEJOBS=-j3
             - RUN_UNIT_TESTS=false
             - RUN_FUNCTIONAL_TESTS=false # Not Yet Implemented
             - RUN_BENCH=false  # Set to true for any one job that has debug enabled, to quickly check bench is not crashing or hitting assertions
             - DOCKER_NAME_TAG=ubuntu:18.04
             - BOOST_TEST_RANDOM=1$TRAVIS_BUILD_ID
             - CCACHE_SIZE=100M
             - CCACHE_TEMPDIR=/tmp/.ccache-temp
             - CCACHE_COMPRESS=1
             - CCACHE_DIR=$HOME/.ccache
             - BASE_OUTDIR=$TRAVIS_BUILD_DIR/out
             - SDK_URL=https://github.com/gitianuser/MacOSX-SDKs/releases/download/MacOSX10.11.sdk
             - WINEDEBUG=fixme-all
             - DOCKER_PACKAGES="build-essential libtool autotools-dev automake pkg-config bsdmainutils curl git ca-certificates ccache"
             - CACHE_ERR_MSG="Error! Initial build successful, but not enough time remains to run later build stages and tests. Please manually re-run this job by using the travis restart button or asking a bitcoin maintainer to restart. The next run should not time out because the build cache has been saved."
             - set -o errexit; source .travis/test_03_before_install.sh
             #- set -o errexit; source .travis/test_04_install.sh
             #- set -o errexit; source .travis/test_05_before_script.sh
             - export CONTINUE=1
             #- if [ $SECONDS -gt 1200 ]; then export CONTINUE=0; fi  # Likely the depends build took very long
             #- if [ $CONTINUE = "1" ]; then set -o errexit; source .travis/test_06_script_a.sh; else set +o errexit; echo "$CACHE_ERR_MSG"; false; fi
             #- if [ $SECONDS -gt 1500 ]; then export CONTINUE=0; fi  # Likely the build took very long; The tests take about 1000s, so we should abort if we have less than 50*60-1000=2000s left
             #- if [ $CONTINUE = "1" ]; then set -o errexit; source .travis/test_06_script_b.sh; else set +o errexit; echo "$CACHE_ERR_MSG"; false; fi
             - echo $TRAVIS_COMMIT_RANGE
             - echo $TRAVIS_COMMIT_LOG
             - HOST=i686-pc-linux-gnu
             - PACKAGES="g++-multilib python3-zmq"
             - GOAL="install"
             - ION_CONFIG="--enable-zmq --with-gui=qt5 --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++"
             - CONFIG_SHELL="/bin/ion"
#      - step:
#           name: 'x86_64 Linux  [GOAL: install]  [bionic]  [uses qt5 dev package instead of depends Qt to speed up build and avoid timeout]'
#           script: # Modify the commands below to build your repository.
#             - MAKEJOBS=-j3
#             - MAKEJOBS=-j3
#             - RUN_UNIT_TESTS=false
#             - RUN_FUNCTIONAL_TESTS=false # Not Yet Implemented
#             - RUN_BENCH=false  # Set to true for any one job that has debug enabled, to quickly check bench is not crashing or hitting assertions
#             - DOCKER_NAME_TAG=ubuntu:18.04
#             - BOOST_TEST_RANDOM=1$TRAVIS_BUILD_ID
#             - CCACHE_SIZE=100M
#             - CCACHE_TEMPDIR=/tmp/.ccache-temp
#             - CCACHE_COMPRESS=1
#             - CCACHE_DIR=$HOME/.ccache
#             - BASE_OUTDIR=$TRAVIS_BUILD_DIR/out
#             - SDK_URL=https://github.com/gitianuser/MacOSX-SDKs/releases/download/MacOSX10.11.sdk
#             - WINEDEBUG=fixme-all
#             - DOCKER_PACKAGES="build-essential libtool autotools-dev automake pkg-config bsdmainutils curl git ca-certificates ccache"
#             - CACHE_ERR_MSG="Error! Initial build successful, but not enough time remains to run later build stages and tests. Please manually re-run this job by using the travis restart button or asking a bitcoin maintainer to restart. The next run should not time out because the build cache has been saved."
#             - set -o errexit; source .travis/test_03_before_install.sh
#             #- set -o errexit; source .travis/test_04_install.sh
#             #- set -o errexit; source .travis/test_05_before_script.sh
#             - export CONTINUE=1
#             #- if [ $SECONDS -gt 1200 ]; then export CONTINUE=0; fi  # Likely the depends build took very long
#             #- if [ $CONTINUE = "1" ]; then set -o errexit; source .travis/test_06_script_a.sh; else set +o errexit; echo "$CACHE_ERR_MSG"; false; fi
#             #- if [ $SECONDS -gt 1500 ]; then export CONTINUE=0; fi  # Likely the build took very long; The tests take about 1000s, so we should abort if we have less than 50*60-1000=2000s left
#             #- if [ $CONTINUE = "1" ]; then set -o errexit; source .travis/test_06_script_b.sh; else set +o errexit; echo "$CACHE_ERR_MSG"; false; fi
#             - echo $TRAVIS_COMMIT_RANGE
#             - echo $TRAVIS_COMMIT_LOG
#             - HOST=x86_64-unknown-linux-gnu
#             - PACKAGES="python3-zmq qtbase5-dev qttools5-dev-tools protobuf-compiler libdbus-1-dev libharfbuzz-dev libprotobuf-dev"
#             - DEP_OPTS="NO_QT=1 NO_UPNP=1 DEBUG=1 ALLOW_HOST_PACKAGES=1"
#             - RUN_FUNCTIONAL_TESTS=true
#             - #TEST_RUNNER_EXTRA="--coverage --extended"  # Run extended tests so that coverage does not fail, but exclude the very slow dbcrash
#             - GOAL="install"
#             - ION_CONFIG="--enable-zmq --with-gui=qt5 --enable-glibc-back-compat --enable-reduce-exports"
      - step:
           name: 'x86_64 Linux  [GOAL: install]  [trusty]  [no functional tests, no depends, only system libs]'
           script: # Modify the commands below to build your repository.
             - MAKEJOBS=-j3
             - MAKEJOBS=-j3
             - RUN_UNIT_TESTS=false
             - RUN_FUNCTIONAL_TESTS=false # Not Yet Implemented
             - RUN_BENCH=false  # Set to true for any one job that has debug enabled, to quickly check bench is not crashing or hitting assertions
             - DOCKER_NAME_TAG=ubuntu:18.04
             - BOOST_TEST_RANDOM=1$TRAVIS_BUILD_ID
             - CCACHE_SIZE=100M
             - CCACHE_TEMPDIR=/tmp/.ccache-temp
             - CCACHE_COMPRESS=1
             - CCACHE_DIR=$HOME/.ccache
             - BASE_OUTDIR=$TRAVIS_BUILD_DIR/out
             - SDK_URL=https://github.com/gitianuser/MacOSX-SDKs/releases/download/MacOSX10.11.sdk
             - WINEDEBUG=fixme-all
             - DOCKER_PACKAGES="build-essential libtool autotools-dev automake pkg-config bsdmainutils curl git ca-certificates ccache"
             - CACHE_ERR_MSG="Error! Initial build successful, but not enough time remains to run later build stages and tests. Please manually re-run this job by using the travis restart button or asking a bitcoin maintainer to restart. The next run should not time out because the build cache has been saved."
             - set -o errexit; source .travis/test_03_before_install.sh
             #- set -o errexit; source .travis/test_04_install.sh
             #- set -o errexit; source .travis/test_05_before_script.sh
             - export CONTINUE=1
             #- if [ $SECONDS -gt 1200 ]; then export CONTINUE=0; fi  # Likely the depends build took very long
             #- if [ $CONTINUE = "1" ]; then set -o errexit; source .travis/test_06_script_a.sh; else set +o errexit; echo "$CACHE_ERR_MSG"; false; fi
             #- if [ $SECONDS -gt 1500 ]; then export CONTINUE=0; fi  # Likely the build took very long; The tests take about 1000s, so we should abort if we have less than 50*60-1000=2000s left
             #- if [ $CONTINUE = "1" ]; then set -o errexit; source .travis/test_06_script_b.sh; else set +o errexit; echo "$CACHE_ERR_MSG"; false; fi
             - echo $TRAVIS_COMMIT_RANGE
             - echo $TRAVIS_COMMIT_LOG
             - HOST=x86_64-unknown-linux-gnu
             - DOCKER_NAME_TAG=ubuntu:14.04
             - PACKAGES="python3-zmq qtbase5-dev qttools5-dev-tools libicu-dev libpng-dev libssl-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-program-options-dev libboost-test-dev libboost-thread-dev libdb5.1++-dev libminiupnpc-dev libzmq3-dev libprotobuf-dev protobuf-compiler libqrencode-dev libgmp-dev"
             - NO_DEPENDS=1
             - RUN_FUNCTIONAL_TESTS=false
             - GOAL="install"
             - ION_CONFIG="--enable-zmq --with-incompatible-bdb --with-gui=no"
      - step:
           name: 'x86_64 Linux  [GOAL: install]  [xenial]  [no depends, only system libs]'
           script: # Modify the commands below to build your repository.
             - MAKEJOBS=-j3
             - MAKEJOBS=-j3
             - RUN_UNIT_TESTS=false
             - RUN_FUNCTIONAL_TESTS=false # Not Yet Implemented
             - RUN_BENCH=false  # Set to true for any one job that has debug enabled, to quickly check bench is not crashing or hitting assertions
             - DOCKER_NAME_TAG=ubuntu:18.04
             - BOOST_TEST_RANDOM=1$TRAVIS_BUILD_ID
             - CCACHE_SIZE=100M
             - CCACHE_TEMPDIR=/tmp/.ccache-temp
             - CCACHE_COMPRESS=1
             - CCACHE_DIR=$HOME/.ccache
             - BASE_OUTDIR=$TRAVIS_BUILD_DIR/out
             - SDK_URL=https://github.com/gitianuser/MacOSX-SDKs/releases/download/MacOSX10.11.sdk
             - WINEDEBUG=fixme-all
             - DOCKER_PACKAGES="build-essential libtool autotools-dev automake pkg-config bsdmainutils curl git ca-certificates ccache"
             - CACHE_ERR_MSG="Error! Initial build successful, but not enough time remains to run later build stages and tests. Please manually re-run this job by using the travis restart button or asking a bitcoin maintainer to restart. The next run should not time out because the build cache has been saved."
             - set -o errexit; source .travis/test_03_before_install.sh
             #- set -o errexit; source .travis/test_04_install.sh
             #- set -o errexit; source .travis/test_05_before_script.sh
             - export CONTINUE=1
             #- if [ $SECONDS -gt 1200 ]; then export CONTINUE=0; fi  # Likely the depends build took very long
             #- if [ $CONTINUE = "1" ]; then set -o errexit; source .travis/test_06_script_a.sh; else set +o errexit; echo "$CACHE_ERR_MSG"; false; fi
             #- if [ $SECONDS -gt 1500 ]; then export CONTINUE=0; fi  # Likely the build took very long; The tests take about 1000s, so we should abort if we have less than 50*60-1000=2000s left
             #- if [ $CONTINUE = "1" ]; then set -o errexit; source .travis/test_06_script_b.sh; else set +o errexit; echo "$CACHE_ERR_MSG"; false; fi
             - echo $TRAVIS_COMMIT_RANGE
             - echo $TRAVIS_COMMIT_LOG
             - HOST=x86_64-unknown-linux-gnu
             - DOCKER_NAME_TAG=ubuntu:16.04
             - PACKAGES="python3-zmq qtbase5-dev qttools5-dev-tools libssl-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-program-options-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libprotobuf-dev protobuf-compiler libqrencode-dev libgmp-dev"
             - NO_DEPENDS=1
             - GOAL="install"
             - ION_CONFIG="--enable-zmq --with-incompatible-bdb --with-gui=qt5 CPPFLAGS=-DDEBUG_LOCKORDER --disable-hardening --disable-asm"
#      - step:
#           name: 'x86_64 Linux  [GOAL: install]  [bionic]  [no depends, only system libs]'
#           script: # Modify the commands below to build your repository.
#             - MAKEJOBS=-j3
#             - MAKEJOBS=-j3
#             - RUN_UNIT_TESTS=false
#             - RUN_FUNCTIONAL_TESTS=false # Not Yet Implemented
#             - RUN_BENCH=false  # Set to true for any one job that has debug enabled, to quickly check bench is not crashing or hitting assertions
#             - DOCKER_NAME_TAG=ubuntu:18.04
#             - BOOST_TEST_RANDOM=1$TRAVIS_BUILD_ID
#             - CCACHE_SIZE=100M
#             - CCACHE_TEMPDIR=/tmp/.ccache-temp
#             - CCACHE_COMPRESS=1
#             - CCACHE_DIR=$HOME/.ccache
#             - BASE_OUTDIR=$TRAVIS_BUILD_DIR/out
#             - SDK_URL=https://github.com/gitianuser/MacOSX-SDKs/releases/download/MacOSX10.11.sdk
#             - WINEDEBUG=fixme-all
#             - DOCKER_PACKAGES="build-essential libtool autotools-dev automake pkg-config bsdmainutils curl git ca-certificates ccache"
#             - CACHE_ERR_MSG="Error! Initial build successful, but not enough time remains to run later build stages and tests. Please manually re-run this job by using the travis restart button or asking a bitcoin maintainer to restart. The next run should not time out because the build cache has been saved."
#             - set -o errexit; source .travis/test_03_before_install.sh
#             #- set -o errexit; source .travis/test_04_install.sh
#             #- set -o errexit; source .travis/test_05_before_script.sh
#             - export CONTINUE=1
#             #- if [ $SECONDS -gt 1200 ]; then export CONTINUE=0; fi  # Likely the depends build took very long
#             #- if [ $CONTINUE = "1" ]; then set -o errexit; source .travis/test_06_script_a.sh; else set +o errexit; echo "$CACHE_ERR_MSG"; false; fi
#             #- if [ $SECONDS -gt 1500 ]; then export CONTINUE=0; fi  # Likely the build took very long; The tests take about 1000s, so we should abort if we have less than 50*60-1000=2000s left
#             #- if [ $CONTINUE = "1" ]; then set -o errexit; source .travis/test_06_script_b.sh; else set +o errexit; echo "$CACHE_ERR_MSG"; false; fi
#             - echo $TRAVIS_COMMIT_RANGE
#             - echo $TRAVIS_COMMIT_LOG
#             - HOST=x86_64-unknown-linux-gnu
#             - PACKAGES="python3-zmq qtbase5-dev qttools5-dev-tools libssl1.0-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-program-options-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libprotobuf-dev protobuf-compiler libqrencode-dev libgmp-dev"
#             - NO_DEPENDS=1
#             - GOAL="install"
#             - ION_CONFIG="--enable-zmq --with-incompatible-bdb --with-gui=qt5 CPPFLAGS=-DDEBUG_LOCKORDER"
      - step:
           name: 'x86_64 Linux  [GOAL: install]  [bionic]  [no depends, only system libs]'
           script: # Modify the commands below to build your repository.
             - MAKEJOBS=-j3
             - MAKEJOBS=-j3
             - RUN_UNIT_TESTS=false
             - RUN_FUNCTIONAL_TESTS=false # Not Yet Implemented
             - RUN_BENCH=false  # Set to true for any one job that has debug enabled, to quickly check bench is not crashing or hitting assertions
             - DOCKER_NAME_TAG=ubuntu:18.04
             - BOOST_TEST_RANDOM=1$TRAVIS_BUILD_ID
             - CCACHE_SIZE=100M
             - CCACHE_TEMPDIR=/tmp/.ccache-temp
             - CCACHE_COMPRESS=1
             - CCACHE_DIR=$HOME/.ccache
             - BASE_OUTDIR=$TRAVIS_BUILD_DIR/out
             - SDK_URL=https://github.com/gitianuser/MacOSX-SDKs/releases/download/MacOSX10.11.sdk
             - WINEDEBUG=fixme-all
             - DOCKER_PACKAGES="build-essential libtool autotools-dev automake pkg-config bsdmainutils curl git ca-certificates ccache"
             - CACHE_ERR_MSG="Error! Initial build successful, but not enough time remains to run later build stages and tests. Please manually re-run this job by using the travis restart button or asking a bitcoin maintainer to restart. The next run should not time out because the build cache has been saved."
             - set -o errexit; source .travis/test_03_before_install.sh
             #- set -o errexit; source .travis/test_04_install.sh
             #- set -o errexit; source .travis/test_05_before_script.sh
             - export CONTINUE=1
             #- if [ $SECONDS -gt 1200 ]; then export CONTINUE=0; fi  # Likely the depends build took very long
             #- if [ $CONTINUE = "1" ]; then set -o errexit; source .travis/test_06_script_a.sh; else set +o errexit; echo "$CACHE_ERR_MSG"; false; fi
             #- if [ $SECONDS -gt 1500 ]; then export CONTINUE=0; fi  # Likely the build took very long; The tests take about 1000s, so we should abort if we have less than 50*60-1000=2000s left
             #- if [ $CONTINUE = "1" ]; then set -o errexit; source .travis/test_06_script_b.sh; else set +o errexit; echo "$CACHE_ERR_MSG"; false; fi
             - echo $TRAVIS_COMMIT_RANGE
             - echo $TRAVIS_COMMIT_LOG
             - HOST=x86_64-apple-darwin14
             - PACKAGES="cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python3-dev python3-setuptools"
             - OSX_SDK=10.11
             - RUN_UNIT_TESTS=false
             - RUN_FUNCTIONAL_TESTS=false
             - GOAL="deploy"
             - ION_CONFIG="--enable-gui --enable-reduce-exports --enable-werror"