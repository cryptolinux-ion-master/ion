##
## ioncoin.conf configuration file. Lines beginning with # are comments.
##

# Network-related settings:

# Run on the test network instead of the real ion network.
#testnet=0

# Run a regression test network
#regtest=0

# Connect via a SOCKS5 proxy
#proxy=127.0.0.1:9050

##############################################################
###      Quick Primer on addnode vs connect#      ##
##  Let's say for instance you use addnode=4.2.2.4#    ##
##  addnode will connect you to and tell you about the      ##
##    nodes connected to 4.2.2.4.  In addition it will tell ##
##    the other nodes connected to it that you exist so     ##
##    they can connect to you.# # # #   ##
##  connect will not do the above when you 'connect' to it. ##
##    It will *only* connect you to 4.2.2.4 and no one else.##
### # # # # # # #   ##
##  So if you're behind a firewall, or have other problems  ##
##  finding nodes, add some using 'addnode'.# #   ##
### # # # # # # #   ##
##  If you want to stay private, use 'connect' to only      ##
##  connect to "trusted" nodes.# # # #  ##
### # # # # # # #   ##
##  If you run multiple nodes on a LAN, there's no need for ##
##  all of them to open lots of connections.  Instead# ##
##  'connect' them all to one node that is port forwarded   ##
##  and has lots of connections.# # # # ##
### Thanks goes to [Noodle] on Freenode.# #  ##
##############################################################

# Use as many addnode= settings as you like to connect to specific peers
#addnode=69.164.218.197
#addnode=10.0.0.2:12700

# Alternatively use as many connect= settings as you like to connect ONLY to specific peers
#connect=69.164.218.197
#connect=10.0.0.1:12700

# Listening mode, enabled by default except when 'connect' is being used
#listen=1

# Maximum number of inbound+outbound connections.
#maxconnections=

#
# JSON-RPC options (for controlling a running Ion/iond process)
#

# server=1 tells Ion-QT and iond to accept JSON-RPC commands
#server=0

# Accept public REST requests (default: 0)
#rest

# You must set rpcuser and rpcpassword to secure the JSON-RPC api
#rpcuser=Ulysseys
#rpcpassword=YourSuperGreatPasswordNumber_DO_NOT_USE_THIS_OR_YOU_WILL_GET_ROBBED_385593

# How many seconds ion will wait for a complete RPC HTTP request.
# after the HTTP connection is established.
#rpcclienttimeout=30

# By default, only RPC connections from localhost are allowed.
# Specify as many rpcallowip= settings as you like to allow connections from other hosts,
# either as a single IPv4/IPv6 or with a subnet specification.

# NOTE: opening up the RPC port to hosts outside your local trusted network is NOT RECOMMENDED,
# because the rpcpassword is transmitted over the network unencrypted.

# server=1 tells Ion-QT to accept JSON-RPC commands.
# it is also read by iond to determine if RPC should be enabled
#rpcallowip=10.1.1.34/255.255.255.0
#rpcallowip=1.2.3.4/24
#rpcallowip=2001:db8:85a3:0:0:8a2e:370:7334/96

# Location of the auth cookie (default: data dir)
#rpccookiefile=<loc>

# Listen for RPC connections on this TCP port:
#rpcport=12705

# You can use Ion or iond to send commands to Ion/iond
# running on another host using this option:
#rpcconnect=127.0.0.1

# Set the number of threads to service RPC calls (default: 4)
#rpcthreads=4

# Bind to given address to listen for JSON-RPC connections. Use
# [host]:port notation for IPv6. This option can be specified multiple
# times (default: bind to all interfaces)
#rpcbind=<addr>

# Miscellaneous options

# Pre-generate this many public/private key pairs, so wallet backups will be valid for
# both prior transactions and several dozen future transactions.
#keypool=100

# Pay an optional transaction fee every time you send IONs.  Transactions with fees
# are more likely than free transactions to be included in generated blocks, so may
# be validated sooner.
#paytxfee=0.00

# User interface options

# Start Ion minimized
#min=1

# Minimize to the system tray
#minimizetotray=1

# ZEROCOIN OPTIONS
# Enable automatic Zerocoin minting (0-1, default: 1)
enablezeromint=0

# Percentage of automatically minted Zerocoin (1-100, default: 10)
#zeromintpercentage=1

# Preferred Denomination for automatically minted Zerocoin (1/5/10/50/100/500/1000/5000), 0 for no preference. default: 0)
#preferredDenom=0

# Enable automatic wallet backups triggered after each xION minting
# (0-1, default: 1)
#backupxion=1

# SWIFTX OPTIONS

# Enable SwiftX, show confirmations for locked transactions (bool, default: true)
#enableswifttx=true

# Show N confirmations for a successfully locked transaction (0-9999, default: 5)
#swifttxdepth=5

# BLOCK CREATION OPTIONS

# Set minimum block size in bytes (default: 0)
#blockminsize=0

# Set maximum block size in bytes (default: 750000)
#blockmaxsize=750000

# Set maximum size of high-priority/low-fee transactions in bytes (default: 50000)
#blockprioritysize=50000

# STAKING OPTIONS

# Enable staking functionality (0-1, default: 1)
#staking=1

# Keep the specified amount available for spending at all times (default: 0)
#reservebalance=0

# MASTERNODE OPTIONS
# Enable the client to act as a masternode (0-1, default: 0)
#masternode=0

# Specify masternode configuration file (default: masternode.conf)
#mnconf=masternode.conf

# Lock masternodes from masternode configuration file (default: 1)
#mnconflock=1

# Set the masternode private key
#masternodeprivkey=9xxxxxxxxxxYOURMASTERNODEPRIVATEKEYyyyyyyyyyyyyyyyZ

# Set external address:port to get to this masternode (example: 128.127.106.235:12700)
#masternodeaddr=128.127.106.235:12700

# Change automatic finalized budget voting behavior. mode=auto: Vote for only exact finalized budget match to my generated budget. (string, default: auto)
#budgetvotemode=auto

# DEBUGGING/TESTING OPTIONS

# Output debugging information (default: 0, supplying <category> is optional). If <category> is not supplied, output all debugging
# information.<category> can be: addrman, alert, bench, coindb, db, lock, rand, rpc, selectcoins, tor, mempool, net, proxy, ion, (obfuscation,
# swiftx, masternode, mnpayments, mnbudget, zero).
#debug=0

# Generate coins (default: 0)
#gen

# Set the number of threads for coin generation if enabled (-1 = all cores, default: 1)
#genproclimit=<n>

# Show all debugging options (usage: --help -help-debug)
#help-debug

# Include IP addresses in debug output (default: 0)
#logips

# Prepend debug output with timestamp (default: 1)
#logtimestamps

# Fees (in ION/Kb) smaller than this are considered zero fee for relaying (default: 0.0001)
#minrelaytxfee=<amt>

# Send trace/debug info to console instead of debug.log file (default: 0)
#printtoconsole

# Shrink debug.log file on client startup (default: 1 when no -debug)
#shrinkdebugfile

# Disable all Ion specific functionality (Masternodes, Zerocoin, SwiftX, Budgeting) (0-1, default: 0)
#litemode=0
